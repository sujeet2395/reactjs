{"ast":null,"code":"var _jsxFileName = \"F:\\\\sujeet_main\\\\reactjsprojects\\\\my-react-app\\\\src\\\\components\\\\EventBind.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EventBind extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: 'Hello'\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n  clickHandler() {\n    // this.setState({          1. approach does not define setState,  1. to call, need to give bind after the name of calling function*/\n    //     message:'Good bye!'\n    // })\n    this.setState({\n      //2. approach need to call through arrow method\n      message: 'Good bye!'\n    });\n    console.log(this); //1. this keyword is undefine for 1. approach and setState is undefine\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clickHandler,\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default EventBind;","map":{"version":3,"names":["React","Component","EventBind","constructor","props","state","message","clickHandler","bind","setState","console","log","render"],"sources":["F:/sujeet_main/reactjsprojects/my-react-app/src/components/EventBind.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass EventBind extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             message:'Hello'\r\n        }\r\n        this.clickHandler=this.clickHandler.bind(this)\r\n    }\r\n\r\n    clickHandler()\r\n    {\r\n        // this.setState({          1. approach does not define setState,  1. to call, need to give bind after the name of calling function*/\r\n        //     message:'Good bye!'\r\n        // })\r\n        this.setState({             //2. approach need to call through arrow method\r\n            message:'Good bye!'\r\n        })\r\n        console.log(this) //1. this keyword is undefine for 1. approach and setState is undefine\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.message}</h1>\r\n                {/* <button onClick={this.clickHandler}>Click</button>  1. only calling method but does not bind with class*/}\r\n                {/* <button onClick={this.clickHandler.bind(this)}>Click</button>  1. to call, need to give bind after the name of calling function*/}\r\n                {/* <button onClick={()=>this.clickHandler()}>Click</button> //2. need to call arrow method which bind this */}\r\n                <button onClick={this.clickHandler}>Click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventBind\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA;AAExC,MAAMC,SAAS,SAASD,SAAS,CAAC;EAC9BE,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACRC,OAAO,EAAC;IACb,CAAC;IACD,IAAI,CAACC,YAAY,GAAC,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,YAAY,GACZ;IACI;IACA;IACA;IACA,IAAI,CAACE,QAAQ,CAAC;MAAc;MACxBH,OAAO,EAAC;IACZ,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC,EAAC;EACtB;;EACAC,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA,UAAK,IAAI,CAACP,KAAK,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eAI7B;QAAQ,OAAO,EAAE,IAAI,CAACC,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD;EAEd;AACJ;AAEA,eAAeL,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}